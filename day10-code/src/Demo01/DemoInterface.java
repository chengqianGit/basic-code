package Demo01;
/*
接口：多个类的公共规范
               是一种引用数据类型
               最重要的内容是其中的抽象方法
如何定义：
    public Interface 接口名称{
      //内容
    }
如果是java 7 ，可以包含有：
  1.常量    （public static final） 数据类型 名称 = 数据值；接口中没有变量，默认常量
                      接口中常量命名使用完全大写字母，用下划线进行分割
  2.抽象方法
如果是java 8，可以包含有：
  3.默认方法  主要解决接口升级问题
  4.静态方法  静态方法不能通过接口实现类调用，正确方法为：接口名称.静态方法
如果java 9 ，可以包含有：
  5.私有方法  解决默认（静态）方法中的代码重复问题，不能被实现类使用，是私有化的
      普通私有方法：private  返回值类型 名称（）{}
      静态私有方法：private static 返回值类型 名称（）{}

接口的使用：
  1.不能直接使用，必须有一个“实现类”来实现接口
    public class 实现类名称 implements 接口名称{
                    //
    }
  2.接口的实现类必须覆盖重写接口的所有抽象方法
  3.创建实现类的对象来使用
注意事项：如果类没有重写接口所有的抽象方法，那么这个类必须是一个抽象类。
 */
public class DemoInterface {
}
